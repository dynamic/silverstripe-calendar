!function(){"use strict";function e(){const e=document.querySelectorAll(".bulk-select-item:checked"),t=document.querySelector(".bulk-actions");t&&(t.style.display=e.length>0?"block":"none",t.querySelectorAll(".bulk-action-btn").forEach(t=>{t.dataset.action;const n=t.dataset.originalText||t.textContent;t.dataset.originalText=n,t.textContent=`${n} (${e.length})`}))}function t(){const e=document.querySelector(".recursion-preview");if(!e)return;const t=document.querySelector('[name*="Recursion"]')?.value,c=document.querySelector('[name*="Interval"]')?.value||1,i=document.querySelector('[name*="StartDate"]')?.value;if(!t||"NONE"===t||!i)return void(e.style.display="none");const o=n(i,t,c),s=`\n    <div class="card-body">\n      <h6><i class="bi bi-calendar-week"></i> Preview Upcoming Dates</h6>\n      <div class="preview-dates">\n        ${o.map(e=>`\n          <span class="badge bg-light text-dark me-1 mb-1">${a(e)}</span>\n        `).join("")}\n      </div>\n      <small class="text-muted">Showing next ${o.length} occurrences</small>\n    </div>\n  `;e.innerHTML=s,e.style.display="block"}function n(e,t,n){const a=[],c=new Date(e);for(let e=0;e<10;e++){const i=new Date(c);switch(t){case"DAILY":i.setDate(c.getDate()+e*parseInt(n));break;case"WEEKLY":i.setDate(c.getDate()+7*e*parseInt(n));break;case"MONTHLY":i.setMonth(c.getMonth()+e*parseInt(n));break;case"YEARLY":i.setFullYear(c.getFullYear()+e*parseInt(n))}a.push(i)}return a}function a(e){return e.toLocaleDateString("en-US",{month:"short",day:"numeric",year:e.getFullYear()!==(new Date).getFullYear()?"numeric":void 0})}function c(e){const t=document.querySelector(".recursion-help");if(!t)return;const n={NONE:"",DAILY:"Event will repeat every day(s) as specified in the interval.",WEEKLY:"Event will repeat every week(s) on the same day of the week.",MONTHLY:"Event will repeat every month(s) on the same date.",YEARLY:"Event will repeat every year(s) on the same date."}[e]||"";t.innerHTML=n?`\n    <div class="alert alert-info">\n      <i class="bi bi-info-circle"></i> ${n}\n    </div>\n  `:""}window.EventFormEnhancements=class{constructor(){this.initConditionalFields(),this.initRecurrencePreview(),this.initQuickFillButtons(),this.initDateTimeHelpers()}initConditionalFields(){const e=document.querySelector('[name*="AllDay"]'),t=document.querySelector('[name*="Recursion"]');e&&(e.addEventListener("change",this.toggleTimeFields.bind(this)),this.toggleTimeFields()),t&&(t.addEventListener("change",this.toggleRecurrenceFields.bind(this)),this.toggleRecurrenceFields())}toggleTimeFields(){const e=document.querySelector('[name*="AllDay"]'),t=document.querySelectorAll('[name*="StartTime"], [name*="EndTime"]'),n=document.querySelectorAll('.field[id*="Time"]'),a=e?.checked;t.forEach(e=>{e.disabled=a,a&&(e.value="")}),n.forEach(e=>{e.style.opacity=a?"0.5":"1"})}toggleRecurrenceFields(){const e=document.querySelector('[name*="Recursion"]'),t=document.querySelectorAll('[name*="Interval"], [name*="RecursionEndDate"]'),n=document.querySelectorAll('.field[id*="Interval"], .field[id*="RecursionEndDate"]'),a=e?.value&&"NONE"!==e.value;t.forEach(e=>{e.disabled=!a,!a&&e.name.includes("Interval")&&(e.value="1")}),n.forEach(e=>{e.style.display=a?"block":"none"})}initRecurrencePreview(){const e=document.querySelector(".cms-edit-form");if(!e)return;const t=document.createElement("div");t.className="recursion-preview card mt-3",t.style.display="none";const n=e.querySelector('#Root_Recurrence, [id*="Recurrence"]');n&&n.appendChild(t),document.querySelectorAll('[name*="Recursion"], [name*="Interval"], [name*="StartDate"], [name*="RecursionEndDate"]').forEach(e=>{e.addEventListener("change",this.updatePreview.bind(this))})}updatePreview(){window.CalendarAdminEnhancements&&window.CalendarAdminEnhancements.updateRecurrencePreview()}initQuickFillButtons(){const e=document.querySelector('[name*="Title"]');if(!e)return;const t=document.createElement("div");t.className="quick-fill-buttons mt-2",t.innerHTML='\n      <small class="text-muted">Quick Fill:</small>\n      <div class="btn-group btn-group-sm ms-2" role="group">\n        <button type="button" class="btn btn-outline-secondary" data-pattern="service">Service</button>\n        <button type="button" class="btn btn-outline-secondary" data-pattern="meeting">Meeting</button>\n        <button type="button" class="btn btn-outline-secondary" data-pattern="study">Bible Study</button>\n        <button type="button" class="btn btn-outline-secondary" data-pattern="event">Special Event</button>\n      </div>\n    ',e.parentNode.appendChild(t),t.addEventListener("click",e=>{e.target.dataset.pattern&&this.applyQuickFill(e.target.dataset.pattern)})}applyQuickFill(e){const t={service:{title:"Worship Service",startTime:"10:00:00",endTime:"11:00:00"},meeting:{title:"Meeting",startTime:"19:00:00",endTime:"20:00:00"},study:{title:"Bible Study",startTime:"19:30:00",endTime:"21:00:00"},event:{title:"Special Event",allDay:!0}}[e];t&&Object.keys(t).forEach(e=>{const n=document.querySelector(`[name*="${e}"], [name*="${e.charAt(0).toUpperCase()+e.slice(1)}"]`);n&&("checkbox"===n.type?n.checked=t[e]:n.value=t[e],n.dispatchEvent(new Event("change",{bubbles:!0})))})}initDateTimeHelpers(){document.querySelectorAll('[name*="Date"]').forEach(e=>{"date"===e.type&&this.addDateShortcuts(e)}),document.querySelectorAll('[name*="Time"]').forEach(e=>{"time"===e.type&&this.addTimeShortcuts(e)})}addDateShortcuts(e){const t=document.createElement("div");t.className="date-shortcuts mt-1",t.innerHTML='\n      <small class="text-muted">Quick dates:</small>\n      <button type="button" class="btn btn-link btn-sm p-0 ms-1" data-action="today">Today</button>\n      <button type="button" class="btn btn-link btn-sm p-0 ms-1" data-action="tomorrow">Tomorrow</button>\n      <button type="button" class="btn btn-link btn-sm p-0 ms-1" data-action="next-sunday">Next Sunday</button>\n    ',e.parentNode.appendChild(t),t.addEventListener("click",t=>{if(t.target.dataset.action){const n=this.getDateForAction(t.target.dataset.action);n&&(e.value=n.toISOString().split("T")[0],e.dispatchEvent(new Event("change",{bubbles:!0})))}})}addTimeShortcuts(e){const t=document.createElement("div");t.className="time-shortcuts mt-1",t.innerHTML='\n      <small class="text-muted">Common times:</small>\n      <button type="button" class="btn btn-link btn-sm p-0 ms-1" data-time="09:00">9 AM</button>\n      <button type="button" class="btn btn-link btn-sm p-0 ms-1" data-time="10:00">10 AM</button>\n      <button type="button" class="btn btn-link btn-sm p-0 ms-1" data-time="19:00">7 PM</button>\n      <button type="button" class="btn btn-link btn-sm p-0 ms-1" data-time="19:30">7:30 PM</button>\n    ',e.parentNode.appendChild(t),t.addEventListener("click",t=>{t.target.dataset.time&&(e.value=t.target.dataset.time,e.dispatchEvent(new Event("change",{bubbles:!0})))})}getDateForAction(e){const t=new Date;switch(e){case"today":return t;case"tomorrow":return new Date(t.getTime()+864e5);case"next-sunday":const e=(7-t.getDay())%7;return new Date(t.getTime()+24*(e||7)*60*60*1e3);default:return null}}},document.addEventListener("DOMContentLoaded",function(){document.body.classList.contains("cms")&&(console.log("Initializing Calendar Admin enhancements..."),window.EventFormEnhancements&&new EventFormEnhancements,function(){const t=document.querySelector(".bulk-select-all");t&&t.addEventListener("change",function(){document.querySelectorAll(".bulk-select-item").forEach(e=>{e.checked=this.checked}),e()}),document.querySelectorAll(".bulk-select-item").forEach(t=>{t.addEventListener("change",e)})}(),document.querySelectorAll('[name*="Recursion"], [name*="Interval"]').forEach(e=>{e.addEventListener("change",t)}),t(),function(){const e=document.querySelector('[name*="Recursion"]');e&&(e.addEventListener("change",function(){c(this.value)}),c(e.value))}())}),window.CalendarAdminEnhancements={updateRecurrencePreview:t,generatePreviewDates:n,formatPreviewDate:a}}();